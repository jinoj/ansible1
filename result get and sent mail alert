---
- name: today server hits upto current time
  hosts: 
  vars:
    - value1: /var/log/httpd/access_log
    - bd1: "{{ da.stdout }}"
    - bd2: "{{ da1.stdout }}"
  tasks:
  - name: assign variable
    shell: echo `date +%d/%b/%Y`
    register: da
  - name: assign variable
    shell: echo `date +%H:%M`
    register: da1
  - name: play for grep count for httpd acces log
    shell: netstat -tulpn | grep LISTEN         # ' df -h '
    #shell:  grep {{ bd1 }}  {{ value1 }} |awk '$4>"[{{ bd1 }}:00:00:00" && $4<"[{{ bd1 }}:{{ bd2 }}:00"' | wc -l
    #with_items:    [ 00, 01, 02, 03, 04, 05, 06, 07, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]   #"{{ da.stdout_lines }}"
    #when: "item == {{ bd2 }}"
    register: counttc
  - name: view the count
    debug: var=counttc #.stdout_lines
  - name: mail result
    mail:
      to: @radiantcashservices.com
      subject: "today total apache hit count list upto now {{ ansible_hostname }} "
      body: "{{ item }}"
    with_items: "{{ counttc.stdout }}"
    #with_items: "{{ counttc.results|map(attribute='stdout_lines')|list }}"
    #when: counttc.stdout
=====================================================

 mail_body.j2
# templates/mail_body.j2
{% for host in play_hosts %}
The {{ host }} says {{ hostvars[host]['result']['stdout'] }}
{% endfor %}
play.yml
---
- hosts: all
  gather_facts: False
  connection: local
  tasks:
    - shell: echo "hello"
      register: result
      
    - mail:
        host: example.com
        port: 25
        to: test@example.com
        subject: Test
        body: "{{ lookup('template', 'templates/mail_body.j2') }}"
      delegate_to: localhost
      run_once: True

======================================================
---
- hosts: all
  gather_facts: False
  #connection: 192.168.5.207
  tasks:
  - shell: echo "hello"
    register: result
  - name: esult
    mail:
      to: linuxadmin@radiantcashservices.com
      subject: Test
      body: "{{ lookup('template', 'templates/mail_body.j2') }}"
    delegate_to: 192.168.5.207
    run_once: True
